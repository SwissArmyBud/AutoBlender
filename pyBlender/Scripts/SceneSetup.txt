import bpy, math, os, sys
from math import sin, cos, pi
from mathutils import Vector, Quaternion

# let the user know Blender is working
#
print("")
print("")
print("")
print("     ATTN: Blender is now working!      ")
print("----------------------------------------")
print("")
print("")

# load the sound file into the program
#
os.chdir('..\\Media\\')
filePth = os.getcwd() + "\\" + sys.argv[4] + ".mp3"
os.chdir('..\\Output\\')

print("Blender adding sound track to the scene:")
print(filePth)
bpy.context.scene.sequence_editor_create()
bpy.context.scene.sequence_editor.sequences.new_sound(filepath=filePth, name="Sound", channel=1,frame_start=0)

# open and load the beat times information
#
beatData = []
beatFile = open('beat_frames.lfa','r')
for line in beatFile.readlines():
    beatData.extend(line.split())
beatFile.close()

beatFrames = []
beats = 0
for i in range(len(beatData)):
    tmp = beatData[i]
    beatFrames.append(int(float(tmp)))

print("")
print("Beats Finished Importing")
print("Beats: " + str(len(beatData)))
print("")

# open and load the mel volume information
#
volumeData = []
volumeFile = open('mel_volume.lfa','r')
for line in volumeFile.readlines():
    volumeData.extend(line.split())
volumeFile.close()

# open and load mel information
#
MelData = []
melFile = open('n_bin_mel.lfa','r')
for line in melFile.readlines():
    MelData.append(line.split())
melFile.close()

maxFrames = len(MelData)
melBins = len(MelData[0])

print("Mel Finished Importing")
print("Mel Frames: " + str(maxFrames))
print("Mel Bins: " + str(melBins))
print("")

# setup some basic parameters before creating/animating objects
#
scn = bpy.context.scene
scn.frame_end = maxFrames

origin = Vector().zero()
meshLoc = Vector().zero()

frameSkip = int(sys.argv[5])

print("Frames traveled per keyframe: " + str(frameSkip))
print("")
print("")
print("")
print("***** ANIMATION STARTED *****")
print("")

#
#	ATTENTION: THIS ENDS THE SCENE SETUP AREA
#	
#	THE REST OF THE TOOL CHAIN IS SIMPLY A RENDERING SCRIPT, AKA "CORE"
#	AND CAN NOW BE REPLACED, MODIFIED, OR REIMPLIMENTED AT WILL
#
#

